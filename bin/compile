#!/bin/bash

# ARGs
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# load required environment variables
ROLE_ID=$(<"$ENV_DIR/ROLE_ID")
SECRETE_ID=$(<"$ENV_DIR/SECRETE_ID")
VAULT_ADDR=$(<"$ENV_DIR/VAULT_ADDR")
VAULT_TOKEN=$(<"$ENV_DIR/VAULT_TOKEN")
CAMINHOS_SECRET_STR=$(<"$ENV_DIR/CAMINHOS_SECRET")

# Lendo a string para o array
declare -a CAMINHOS_SECRET
read -r -a CAMINHOS_SECRET <<< "$CAMINHOS_SECRET_STR"

if [[ -z $ROLE_ID ]]; then
    echo "Did you forget to set ROLE_ID?"
    exit 1
fi

if [[ -z $SECRETE_ID ]]; then
    echo "Did you forget to set SECRETE_ID?"
    exit 1
fi

if [[ -z $SECRETE_ID ]]; then
    echo "Did you forget to set SECRETE_ID?"
    exit 1
fi

if [[ -z $VAULT_ADDR ]]; then
    echo "Did you forget to set VAULT_ADDR?"
    exit 1
fi

if [[ -z $VAULT_TOKEN ]]; then
    echo "Did you forget to set VAULT_TOKEN?"
    exit 1
fi

if [[ -z $CAMINHOS_SECRET ]]; then
    echo "Did you forget to set CAMINHOS_SECRET?"
    exit 1
fi


echo "O 0 parâmetro é: $0"
echo "O 1 parâmetro é: $1"
echo "O 2 parâmetro é: $2"
echo "O 3 parâmetro é: $3"

echo "O segundo parâmetro custorm ROLE_ID é: $ROLE_ID"
echo "O segundo parâmetro custorm SECRETE_ID é: $SECRETE_ID"
echo "O segundo parâmetro custorm VAULT_ADDR é: $VAULT_ADDR"
echo "O segundo parâmetro custorm VAULT_TOKEN é: $VAULT_TOKEN"
echo "O segundo parâmetro custorm CAMINHOS_SECRET é: $CAMINHOS_SECRET"


# Função para obter uma secreta
get_secret() {
    local caminho="$1"

    echo "# Path: $caminho"

    local secret_data=$(curl -s \
        --header "X-Vault-Token: $VAULT_TOKEN" \
        --request GET \
        "$VAULT_ADDR/v1/$caminho")
    
    # Verificar se a solicitação foi bem-sucedida
    if [ "$(echo "$secret_data" | jq -r '.errors')" != "null" ]; then
        echo "Erro ao obter a secret em $caminho:"
        echo "$secret_data" | jq -r '.errors'
        return 1
    fi
    
    data=$(echo $secret_data | jq -r '.data.data')
    echo $data | jq -r 'to_entries | .[] | "\(.key)=\(.value)"'

    echo "# Path: $1" >> .env

    # ESCREVE NO ARQUIVO .ENV
    # echo $data | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' >> .env
    # echo "\n" >> .env

     echo $data | jq -r 'to_entries | .[] | "env \(.key)=\(.value)"'
     $data | jq -r 'to_entries | .[] | "env \(.key)=\(.value)"'
}
#------------------------------------------------------------------------------

    # if [ -f .env ]; then
    #     env_file=".env"
    #     backup_suffix=".backup_$(date +"%Y%m%d%H%M%S")"
    #     echo "O arquivo .env existe, renomeando para $env_file$backup_suffix..."
    #     mv "$env_file" "$env_file$backup_suffix"
    # else
    #     echo "O arquivo .env não existe. Criando..."
    #     touch .env
    #     echo "Arquivo .env criado com sucesso."
    # fi

pwd
ls -an "${BUILD_DIR}"

# Iterar sobre os caminhos das secretas e obter cada uma
for caminho_secret in "${CAMINHOS_SECRET[@]}"; do
    get_secret "$caminho_secret"
done
